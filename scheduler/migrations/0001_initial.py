# Generated by Django 5.2.6 on 2025-10-05 18:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('is_all_day', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes_before', models.PositiveIntegerField(default=15)),
                ('channel', models.CharField(choices=[('email', 'E-mail')], default='email', max_length=20)),
                ('scheduled_for', models.DateTimeField(editable=False)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='scheduler.event')),
            ],
            options={
                'ordering': ['scheduled_for'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(default='email', max_length=20)),
                ('status', models.CharField(choices=[('sent', 'Enviado'), ('failed', 'Falhou')], max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='scheduler.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('reminder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='scheduler.reminder')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['owner', 'start'], name='scheduler_e_owner_i_aa1800_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['start', 'end'], name='scheduler_e_start_931ba7_idx'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['is_sent', 'scheduled_for'], name='scheduler_r_is_sent_da2f4c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reminder',
            unique_together={('event', 'minutes_before', 'channel')},
        ),
        migrations.AddIndex(
            model_name='notificationlog',
            index=models.Index(fields=['user', 'created_at'], name='scheduler_n_user_id_255e36_idx'),
        ),
    ]
